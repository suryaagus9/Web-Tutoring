{"ast":null,"code":"// employerService.js\nexport const getStudentProfile = async () => {\n  const response = await fetch('http://localhost:5000/student/profile', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n    }\n  });\n  if (response.ok) {\n    return await response.json();\n  } else {\n    throw new Error('Failed to fetch student profile');\n  }\n};\nexport const updateStudentProfile = async (student_id, data) => {\n  const response = await fetch(`http://localhost:5000/students/${student_id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n    },\n    body: JSON.stringify(data)\n  });\n  if (response.ok) {\n    return await response.json();\n  } else {\n    throw new Error('Failed to update student profile');\n  }\n};","map":{"version":3,"names":["getStudentProfile","response","fetch","headers","localStorage","getItem","ok","json","Error","updateStudentProfile","student_id","data","method","body","JSON","stringify"],"sources":["D:/Web Lanjutan/Web Tutoring Project/frontend/src/services/studentService.js"],"sourcesContent":["// employerService.js\r\nexport const getStudentProfile = async () => {\r\n    const response = await fetch('http://localhost:5000/student/profile', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n      }\r\n    });\r\n  \r\n    if (response.ok) {\r\n      return await response.json();\r\n    } else {\r\n      throw new Error('Failed to fetch student profile');\r\n    }\r\n  };\r\n  export const updateStudentProfile = async (student_id, data) => {\r\n    const response = await fetch(`http://localhost:5000/students/${student_id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n  \r\n    if (response.ok) {\r\n      return await response.json();\r\n    } else {\r\n      throw new Error('Failed to update student profile');\r\n    }\r\n  };"],"mappings":"AAAA;AACA,OAAO,MAAMA,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;IACpEC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACjE;EACF,CAAC,CAAC;EAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;IACf,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC9B,CAAC,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;EACpD;AACF,CAAC;AACD,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,UAAU,EAAEC,IAAI,KAAK;EAC9D,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkCQ,UAAU,EAAE,EAAE;IAC3EE,MAAM,EAAE,KAAK;IACbT,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACjE,CAAC;IACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;EAC3B,CAAC,CAAC;EAEF,IAAIV,QAAQ,CAACK,EAAE,EAAE;IACf,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC9B,CAAC,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;EACrD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}