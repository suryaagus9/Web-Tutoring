{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000'; // Sesuaikan dengan URL backend Anda\n\n// Menambahkan header authorization dengan token dari local storage\nconst getAuthHeaders = () => ({\n  headers: {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n  }\n});\nexport const getUserById = async userId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/users/${userId}`, getAuthHeaders());\n    return response.data; // Mengembalikan data dari respons API secara utuh\n  } catch (error) {\n    console.error('Failed to fetch user details', error);\n    throw error;\n  }\n};\nexport const updateUser = async (userId, userData) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/users/${userId}`, userData, getAuthHeaders());\n    return response.data; // Mengembalikan data dari respons API secara utuh\n  } catch (error) {\n    console.error('Failed to update user details', error);\n    throw error;\n  }\n};\n\n// export const fetchClasses = async () => {\n//   try {\n//     const response = await axios.get(`${API_BASE_URL}/classes`, getAuthHeaders());\n//     return response.data.classes; // Sesuaikan dengan struktur respons Anda\n//   } catch (error) {\n//     console.error('Error fetching classes:', error);\n//     throw error;\n//   }\n// };\n\nexport const getAllClasses = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/classes`, getAuthHeaders());\n    return response.data.classes; // Sesuaikan dengan struktur respons Anda\n  } catch (error) {\n    console.error('Failed to fetch classes', error);\n    throw error;\n  }\n};\nexport const getClassById = async classId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/classes/${classId}`, getAuthHeaders());\n    return response.data.class; // Sesuaikan dengan struktur respons Anda\n  } catch (error) {\n    console.error('Failed to fetch class details', error);\n    throw error;\n  }\n};\nexport const joinClass = async joinData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/joins`, joinData, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    console.error('Failed to join class', error);\n    throw error;\n  }\n};\nexport const getJoinsByStudentId = async studentId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/joins/student/${studentId}`, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch joined classes', error);\n    throw error;\n  }\n};\n\n// Example login function\nconst handleLogin = async credentials => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/api/login`, credentials);\n    const {\n      user_id,\n      access_token\n    } = response.data;\n    localStorage.setItem('user_id', user_id); // Store user_id in localStorage\n    localStorage.setItem('access_token', access_token); // Store access token in localStorage\n  } catch (error) {\n    console.error('Login failed', error);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","getAuthHeaders","headers","localStorage","getItem","getUserById","userId","response","get","data","error","console","updateUser","userData","put","getAllClasses","classes","getClassById","classId","class","joinClass","joinData","post","getJoinsByStudentId","studentId","handleLogin","credentials","user_id","access_token","setItem"],"sources":["D:/Web Lanjutan/Web Tutoring Project/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000'; // Sesuaikan dengan URL backend Anda\r\n\r\n// Menambahkan header authorization dengan token dari local storage\r\nconst getAuthHeaders = () => ({\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n  }\r\n});\r\n\r\n\r\n\r\nexport const getUserById = async (userId) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/users/${userId}`, getAuthHeaders());\r\n    return response.data; // Mengembalikan data dari respons API secara utuh\r\n  } catch (error) {\r\n    console.error('Failed to fetch user details', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateUser = async (userId, userData) => {\r\n  try {\r\n    const response = await axios.put(`${API_BASE_URL}/users/${userId}`, userData, getAuthHeaders());\r\n    return response.data; // Mengembalikan data dari respons API secara utuh\r\n  } catch (error) {\r\n    console.error('Failed to update user details', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// export const fetchClasses = async () => {\r\n//   try {\r\n//     const response = await axios.get(`${API_BASE_URL}/classes`, getAuthHeaders());\r\n//     return response.data.classes; // Sesuaikan dengan struktur respons Anda\r\n//   } catch (error) {\r\n//     console.error('Error fetching classes:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\nexport const getAllClasses = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/classes`, getAuthHeaders());\r\n    return response.data.classes; // Sesuaikan dengan struktur respons Anda\r\n  } catch (error) {\r\n    console.error('Failed to fetch classes', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getClassById = async (classId) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/classes/${classId}`, getAuthHeaders());\r\n    return response.data.class; // Sesuaikan dengan struktur respons Anda\r\n  } catch (error) {\r\n    console.error('Failed to fetch class details', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const joinClass = async (joinData) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/joins`, joinData, getAuthHeaders());\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Failed to join class', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const getJoinsByStudentId = async (studentId) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/joins/student/${studentId}`, getAuthHeaders());\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Failed to fetch joined classes', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n// Example login function\r\nconst handleLogin = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/api/login`, credentials);\r\n    const { user_id, access_token } = response.data;\r\n    localStorage.setItem('user_id', user_id);  // Store user_id in localStorage\r\n    localStorage.setItem('access_token', access_token);  // Store access token in localStorage\r\n  } catch (error) {\r\n    console.error('Login failed', error);\r\n  }\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}