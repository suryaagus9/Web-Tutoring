{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Lanjutan\\\\Web Tutoring Project\\\\frontend\\\\src\\\\components\\\\Tutor\\\\CreateClass.js\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../style/CreateClass.css';\nimport Navbar from \"../Tutor/NavTutor\";\nconst classTypes = ['Language', 'Mathematics', 'Science', 'Technology', 'Art and Design', 'Business and Finance', 'Music and Entertainment', 'Life Skills', 'Test Preparation', 'Special Education', 'Health and Wellness'];\nconst CreateClass = () => {\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [requirements, setRequirements] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [salary, setSalary] = useState(\"\");\n  const [jobType, setJobType] = useState(\"\");\n  const [applicationDeadline, setApplicationDeadline] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const employerId = localStorage.getItem(\"employer_id\");\n    const jobData = {\n      employer_id: employerId,\n      job_title: jobTitle,\n      job_description: jobDescription,\n      requirements: requirements,\n      location: location,\n      salary: salary,\n      job_type: jobType,\n      application_deadline: applicationDeadline\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/jobs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n        },\n        body: JSON.stringify(jobData)\n      });\n      if (response.ok) {\n        navigate(\"/employerHome\");\n      } else {\n        const data = await response.json();\n        setError(data.message || \"Failed to create job\");\n      }\n    } catch (error) {\n      console.error(\"Error creating job:\", error);\n      setError(\"Failed to create job\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Class\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Your class title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Descriptions\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Enter your class descriptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Class Type\"), /*#__PURE__*/React.createElement(\"select\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, classTypes.map((type, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, type))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Class Lesson\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    placeholder: \"What is primarily taught in your Class?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Rp.xxx.xxx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"Save\")));\n};\nexport default CreateClass;","map":{"version":3,"names":["React","useState","useNavigate","Navbar","classTypes","CreateClass","jobTitle","setJobTitle","jobDescription","setJobDescription","requirements","setRequirements","location","setLocation","salary","setSalary","jobType","setJobType","applicationDeadline","setApplicationDeadline","error","setError","navigate","handleSubmit","e","preventDefault","employerId","localStorage","getItem","jobData","employer_id","job_title","job_description","job_type","application_deadline","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","data","json","message","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","map","index","key","value"],"sources":["D:/Web Lanjutan/Web Tutoring Project/frontend/src/components/Tutor/CreateClass.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport '../style/CreateClass.css';\r\nimport Navbar from \"../Tutor/NavTutor\";\r\n\r\nconst classTypes = [\r\n  'Language',\r\n  'Mathematics',\r\n  'Science',\r\n  'Technology',\r\n  'Art and Design',\r\n  'Business and Finance',\r\n  'Music and Entertainment',\r\n  'Life Skills',\r\n  'Test Preparation',\r\n  'Special Education',\r\n  'Health and Wellness'\r\n];\r\n\r\nconst CreateClass = () => {\r\n  const [jobTitle, setJobTitle] = useState(\"\");\r\n  const [jobDescription, setJobDescription] = useState(\"\");\r\n  const [requirements, setRequirements] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [salary, setSalary] = useState(\"\");\r\n  const [jobType, setJobType] = useState(\"\");\r\n  const [applicationDeadline, setApplicationDeadline] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const employerId = localStorage.getItem(\"employer_id\");\r\n    const jobData = {\r\n      employer_id: employerId,\r\n      job_title: jobTitle,\r\n      job_description: jobDescription,\r\n      requirements: requirements,\r\n      location: location,\r\n      salary: salary,\r\n      job_type: jobType,\r\n      application_deadline: applicationDeadline,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/jobs\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\r\n        },\r\n        body: JSON.stringify(jobData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        navigate(\"/employerHome\"); \r\n      } else {\r\n        const data = await response.json();\r\n        setError(data.message || \"Failed to create job\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating job:\", error);\r\n      setError(\"Failed to create job\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n  <div>\r\n    <Navbar/>\r\n    <div className='create'>\r\n      <h2>Class</h2>\r\n      <p className='name'>Title</p>\r\n      <input type=\"text\" placeholder=\"Your class title\" />\r\n      <p className='name'>Descriptions</p>\r\n      <textarea placeholder=\"Enter your class descriptions\"/>\r\n      <p className='name'>Class Type</p>\r\n      <select>\r\n          {classTypes.map((type, index) => (\r\n            <option key={index} value={type}>{type}</option>\r\n          ))}\r\n      </select>\r\n      <p className='name'>Class Lesson</p>\r\n      <textarea type=\"text\" placeholder=\"What is primarily taught in your Class?\" />\r\n      <p className='name'>Price</p>\r\n      <input type=\"text\" placeholder=\"Rp.xxx.xxx\" />\r\n      {/* <select>\r\n        <option>Class durations</option>\r\n      </select> */}\r\n      {/* <div className=\"thumbnail-container\">\r\n        <img src='/images/black.jpeg' alt=\"Thumbnail placeholder\" />\r\n        <div>\r\n          <p>\r\n            Upload your course Thumbnail here. <strong>Important guidelines:</strong> 1200x800 pixels or 12:8 Ratio. Supported format: .jpg, .jpeg, or .png\r\n          </p>\r\n          <button>Upload Image</button>\r\n        </div>\r\n      </div> */}\r\n      <button>Save</button>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default CreateClass;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}